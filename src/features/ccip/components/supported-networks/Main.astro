---
import { Accordion, Aside } from "@components"
import { loadReferenceData, Version, Environment } from "@config/data/ccip/"
import { directoryToSupportedChain, getTitle, getChainIcon } from "@features/utils"
import ChainConfig from "./ChainConfig.astro"

type MainProps = {
  environment: Environment
  version: Version
}

const { environment, version } = Astro.props as MainProps

const chainsReferenceData = loadReferenceData({ environment, version }).chainsReferenceData
---

<Aside type="note" title="Early Access">
  <p>
    Chainlink CCIP is in the “Early Access” stage of development, which means that Chainlink CCIP currently has
    functionality which is under development and may be changed in later versions. There is no guarantee any of the
    contemplated features of Chainlink CCIP or the Chainlink Network will be implemented as specified. Chainlink CCIP is
    a messaging protocol. Chainlink does not hold or transfer any assets. Please review the <a
      href="https://chain.link/terms">Chainlink Terms of Service</a
    > which provides important information and disclosures. By using Chainlink CCIP, you expressly acknowledge and agree
    to accept these terms.
  </p>
</Aside>

<br />

{
  Object.entries(chainsReferenceData).map(([chainRefId, chainConfig], index) => {
    const chainKey = directoryToSupportedChain(chainRefId)
    const chainTitle = getTitle(chainKey)
    if (!chainTitle) throw Error(`Title not found for chain ${chainKey}`)
    const chainIcon = getChainIcon(chainKey)
    if (!chainIcon) throw Error(`Icon not found for chain ${chainKey}`)
    const id = chainKey.replace(/_/g, "-").toLowerCase()
    return (
      <>
        <Accordion title={chainTitle} contentReference={id}>
          <div slot="title" class="logo-title-container">
            <img src={chainIcon} class="logo-image" />
            <span>{chainTitle}</span>
          </div>
          <ChainConfig
            chainConfig={chainConfig}
            sourceChain={chainKey}
            sourceChainRefId={chainRefId}
            environment={environment}
            version={version}
          />
        </Accordion>
      </>
    )
  })
}

<style>
  .logo-title-container {
    display: flex;
    align-items: center;
  }

  .logo-image {
    width: 24px;
    height: 24px;
    margin-right: 5px;
  }
</style>
